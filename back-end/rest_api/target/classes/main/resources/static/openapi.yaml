openapi: 3.0.1
info:
  title: Toll Station API
  version: 1.0.0
servers:
  - url: http://localhost:9115/api
    variables:
      host:
        default: localhost
paths:
  /login:
    post:
      tags:
        - Authentication
      summary: User login
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User's username
                password:
                  type: string
                  description: User's password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Authentication token
        '401':
          description: Unauthorized access
  /logout:
    post:
      tags:
        - Authentication
      summary: User logout
      responses:
        '200':
          description: Successful logout
        '401':
          description: Unauthorized access

  /tollStationPasses/{tollStationID}/{date_from}/{date_to}:
    get:
      tags:
        - tollStationPasses
      summary: Get total toll station passes from a period
      description: Returns the total number of station passes from `date_from` to `date_to` for a given station.
      operationId: getTollStationPasses
      parameters:
        - name: tollStationID
          in: path
          required: true
          description: ID of the toll station
          schema:
            type: string
        - name: date_from
          in: path
          required: true
          description: Start date in the format YYYYMMDD
          schema:
            type: string
            pattern: '^\d{8}$'  # Ensures the format is YYYYMMDD
        - name: date_to
          in: path
          required: true
          description: End date in the format YYYYMMDD
          schema:
            type: string
            pattern: '^\d{8}$'  # Ensures the format is YYYYMMDD
        - name: format
          in: query
          required: false
          description: Response format (json or csv). Defaults to json.
          schema:
            type: string
            enum: [ json, csv ]
            default: json
      responses:
        '200':
          description: Success - Returns the toll passes data for the requested period
          content:
            application/json:
              schema:
                type: object
                properties:
                  stationID:
                    type: string
                    description: ID of the station
                  stationOperator:
                    type: string
                    description: Name of the worker at the station
                  requestTimestamp:
                    type: string
                    description: Timestamp of the request
                  periodFrom:
                    type: string
                    description: Start of the period (YYYYMMDD)
                  periodTo:
                    type: string
                    description: End of the period (YYYYMMDD)
                  nPasses:
                    type: integer
                    description: Number of passes in the given period
                  passList:
                    type: array
                    items:
                      type: object
                      properties:
                        passIndex:
                          type: integer
                          description: The pass number
                        passID:
                          type: string
                          description: ID of the pass
                        timestamp:
                          type: string
                          description: Timestamp when the pass was recorded
                        tagID:
                          type: string
                          description: Tag ID associated with the pass
                        tagProvider:
                          type: string
                          description: The provider of the tag
                        passType:
                          type: string
                          enum: [ home, visitor ]
                          description: Type of pass
                        passCharge:
                          type: string
                          description: Charging details for the pass
        '204':
          description: No Content - The request was successful, but no data is available
        '400':
          description: Bad Request - Invalid parameters or missing information
        '401':
          description: Unauthorized Access
        '500':
          description: Internal Server Error - An unexpected error occurred

components:
  schemas:
    Pass:
      type: object
      properties:
        passIndex:
          type: integer
        passID:
          type: string
        timestamp:
          type: string
        tagID:
          type: string
        tagProvider:
          type: string
        passType:
          type: string
          enum: [ home, visitor ]
        passCharge:
          type: string

